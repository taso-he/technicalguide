[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TASO Technical Guide",
    "section": "",
    "text": "Welcome to the TASO Technical Guide, an interactive resource designed to guide and enhance your data visualisation and coding practices. This website contains:\n\n\n\n  Data Visualisation Style Guide  \n\nDeveloped to help TASO, our partners, and the wider sector to create impactful charts. Designed to provide clear, accessible guidelines that you can apply using the data visualisation tool of your choice (e.g., Excel, R or Tableau).\n\n\n\n  Coding Good Practice  \n\nGuidelines, tools and tips for ensuring that code is accessible and shareable. Designed for those looking to improve the tidiness, reproducibility and quality of their R scripts.\n\n\n\n  Contact Point  \n\nWe view these guides as iterative resources, and we encourage you to share your feedback.",
    "crumbs": [
      "Home",
      "Introduction to the guides"
    ]
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "TASO Technical Guide",
    "section": "",
    "text": "Welcome to the TASO Technical Guide, an interactive resource designed to guide and enhance your data visualisation and coding practices. This website contains:\n\n\n\n  Data Visualisation Style Guide  \n\nDeveloped to help TASO, our partners, and the wider sector to create impactful charts. Designed to provide clear, accessible guidelines that you can apply using the data visualisation tool of your choice (e.g., Excel, R or Tableau).\n\n\n\n  Coding Good Practice  \n\nGuidelines, tools and tips for ensuring that code is accessible and shareable. Designed for those looking to improve the tidiness, reproducibility and quality of their R scripts.\n\n\n\n  Contact Point  \n\nWe view these guides as iterative resources, and we encourage you to share your feedback.",
    "crumbs": [
      "Home",
      "Introduction to the guides"
    ]
  },
  {
    "objectID": "index.html#why-publish-on-github",
    "href": "index.html#why-publish-on-github",
    "title": "TASO Technical Guide",
    "section": "Why publish on GitHub?",
    "text": "Why publish on GitHub?\nWe created these documents using Quarto, and published them through GitHub. This enables a more fluid and responsive approach to sharing good practices. It allows us to regularly update the content, ensuring that you always have access to the latest guidelines in data visualisation and coding.\nThe interactive nature of this website also facilitates a more engaging experience. You will see callout boxes that highlight key points or warnings:\n\n\n\n\n\n\nTip\n\n\n\nThe data visualisation guide and coding good practice are separate but complementary documents. We designed the data visualisation style guide with a wide audience in mind. Those who do code can view the technical details behind the charts.\n\n\nYou will also see when we are referring to code through text highlighted like this. You can see code that you can copy and try yourself in these fold-out boxes:\n\n\nShow the code\nlibrary(tidyverse)\n\ntaso_three_colour &lt;- c(\"#3b66bc\", \"#00a8da\", \"#07dbb3\")\n\ndf &lt;- data.frame(\n  Year = c(2019, 2020, 2021, 2022),\n  School_A = c(10, 12, 15, 13),\n  School_B = c(17, 15, 21, 24),\n  School_C = c(4, 2, 5, 6)\n)\n\n\nYou can see the latest changes and the code behind how we built this website using Quarto on our GitHub page.\n\n\n\n\n\n\nLicensing and acknowledgements\n\n\n\nThe TASO Technical Guide © 2024 by TASO is licensed under CC BY-NC 4.0. This means that others are free to share, copy, distribute, and transmit the work, as well as to adapt or build upon it, for non-commercial purposes, as long as appropriate credit is given, a link to the license is provided, and any changes made are indicated.\nThis website incorporates and adapts elements of the Quarto code from the “Best Practices for Data Visualisation” guide, authored by Andreas Krause, Nicola Rennie and Brian Tarran, and published by the Royal Statistical Society in July 2023. While the specific content from the guide has not been used, the code structure has been valuable in the development of specific functionalities on this site. Their guide is accessible at https://royal-statistical-society.github.io/datavisguide/ and is licensed under CC BY 4.0. We are thankful to the authors and the Royal Statistical Society for sharing their expertise and resources, which have greatly assisted in the technical aspects of this website’s construction.",
    "crumbs": [
      "Home",
      "Introduction to the guides"
    ]
  },
  {
    "objectID": "data-vis/references.html",
    "href": "data-vis/references.html",
    "title": "References and further resources",
    "section": "",
    "text": "Financial Times. 2019. Visual vocabulary. https://ft-interactive.github.io/visual-vocabulary/ [Accessed 15 August 2024]\nSchwabish, J. 2021. Better data visualizations: A guide for scholars, researchers, and wonks. Columbia University Press.\nDonnarumma, F. 2019. Say what you see - the way we write chart titles is changing. https://digitalblog.ons.gov.uk/2019/01/28/ [Accessed 15 August 2024]\nLearn UI Design. 2023. Data color picker. https://www.learnui.design/tools/data-color-picker.html [Accessed 15 August 2024]\nGovernment Analysis Function. 2022. Data visualisation: charts. https://analysisfunction.civilservice.gov.uk/policy-store/data-visualisation-charts/ [Accessed 15 August 2024]\nRoyal Statistical Society. 2023. Best Practices for Data Visualisation: https://royal-statistical-society.github.io/datavisguide/ [Accessed 21 November 2023]\nCesal, A. 2020. Writing Alt Text for Data Visualization. https://medium.com/nightingale/writing-alt-text-for-data-visualization-2a218ef43f81 [Accessed 21 November 2023]",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "References and further resources"
    ]
  },
  {
    "objectID": "data-vis/references.html#resources-referenced-and-linked-to-in-the-text-in-order-of-appearance",
    "href": "data-vis/references.html#resources-referenced-and-linked-to-in-the-text-in-order-of-appearance",
    "title": "References and further resources",
    "section": "",
    "text": "Financial Times. 2019. Visual vocabulary. https://ft-interactive.github.io/visual-vocabulary/ [Accessed 15 August 2024]\nSchwabish, J. 2021. Better data visualizations: A guide for scholars, researchers, and wonks. Columbia University Press.\nDonnarumma, F. 2019. Say what you see - the way we write chart titles is changing. https://digitalblog.ons.gov.uk/2019/01/28/ [Accessed 15 August 2024]\nLearn UI Design. 2023. Data color picker. https://www.learnui.design/tools/data-color-picker.html [Accessed 15 August 2024]\nGovernment Analysis Function. 2022. Data visualisation: charts. https://analysisfunction.civilservice.gov.uk/policy-store/data-visualisation-charts/ [Accessed 15 August 2024]\nRoyal Statistical Society. 2023. Best Practices for Data Visualisation: https://royal-statistical-society.github.io/datavisguide/ [Accessed 21 November 2023]\nCesal, A. 2020. Writing Alt Text for Data Visualization. https://medium.com/nightingale/writing-alt-text-for-data-visualization-2a218ef43f81 [Accessed 21 November 2023]",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "References and further resources"
    ]
  },
  {
    "objectID": "data-vis/references.html#further-data-visualisation-resources",
    "href": "data-vis/references.html#further-data-visualisation-resources",
    "title": "References and further resources",
    "section": "Further data visualisation resources",
    "text": "Further data visualisation resources\nThis style guide draws on some existing style guides. Some key sources of inspiration include:\n\nGovernment Analysis Function style guide\nUrban Institute Data Visualisation style guide\nRoyal Statistical Society style guide\n\nWe have endeavoured to keep this guide as concise as possible, meaning we do not cover the same ground that more extensive style guides do. If you have further questions on data visualisation, the above guides may be able to help. In particular, we found the Government Analysis Function valuable as an extensive but readable style guide.\nOur principles for effective data visualisation are rooted in the insights of Jonathan Schwabish, showcased in his contributions through PolicyViz. Sources include:\n\nBetter Data Vizualisations: A Guide for Scholars, Researchers and Wonks\nBetter Presentations: A Guide for Scholars, Researchers and Wonks\nData viz cheat sheet\nList of style guides\nAn Economist’s Guide to Visualising Data\n\nFor excellent examples of data visualisation, we also found the Financial Times (FT) and The Economist very helpful, particularly the work of John Burn-Murdoch:\n\nYou can find the work of John Burn-Murdoch here, or on X (formerly Twitter). This presentation is also insightful.\nThe Economist’s data visualisation newsletter Off The Charts is a helpful resource for learning how their data journalism team create visualisations and tackles problems. Its ‘Graphic Detail’ section showcases its charts.\n\nOrganisations that focus on data visualisation also have helpful blogs. These include Flourish, Datawrapper and Visualisingdata.",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "References and further resources"
    ]
  },
  {
    "objectID": "data-vis/references.html#r-resources",
    "href": "data-vis/references.html#r-resources",
    "title": "References and further resources",
    "section": "R resources",
    "text": "R resources\nYou can find example R code for creating charts with TASO stylings on our GitHub.\nIf you are using R to create your plots, you may also find the following resources helpful.\n\nggplot Wizardry Hands-On - some helpful tips and tricks from Cédric Scherer\nTips and Tricks for ggplot2 - more helpful tips and tricks from Erik Gahner Larsen\nModern Data Visualisation with R - an open-access textbook by Robert Kabacoff\nR for Data Science - an open-access textbook by Hadley Wickham, if you are using ggplot for the first time the data visualisation chapter provides a great introduction to how ggplot works.\nR graph gallery - a collection of charts made with R. The creator Yan Holtz provides useful insight on X (formerly Twitter).",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "References and further resources"
    ]
  },
  {
    "objectID": "data-vis/index.html",
    "href": "data-vis/index.html",
    "title": "Data visualisation style guide",
    "section": "",
    "text": "This data visualisation style guide has been developed to help TASO, our partners, and the wider sector to create impactful and effective charts. It is designed to provide clear, accessible guidelines that can be applied using the data visualisation tool of your choice. We welcome your feedback on this guidance. We view this as an iterative document that will evolve as we learn more about which elements are most helpful. Please let us know what you think: luke.arundel@taso.org.uk.",
    "crumbs": [
      "Home",
      "Data visualisation style guide"
    ]
  },
  {
    "objectID": "data-vis/index.html#why-good-data-visualisation-matters",
    "href": "data-vis/index.html#why-good-data-visualisation-matters",
    "title": "Data visualisation style guide",
    "section": "Why good data visualisation matters",
    "text": "Why good data visualisation matters\nWhile often overshadowed by other aspects of writing and analysis, data visualisation warrants dedicated attention. At TASO, we recognise its value and are committed to empowering our audience through carefully designed charts. Good data visualisation is vital because it holds the power to convey complex information succinctly and memorably. By presenting data visually, we simplify patterns, trends and insights. We can tell a story with the data, and design our charts to tell this story compellingly. To do this, we need to carefully consider how we set up our charts, and not rely on the default software settings.",
    "crumbs": [
      "Home",
      "Data visualisation style guide"
    ]
  },
  {
    "objectID": "data-vis/index.html#about-the-guide",
    "href": "data-vis/index.html#about-the-guide",
    "title": "Data visualisation style guide",
    "section": "About the guide",
    "text": "About the guide\n\nHow to use the guide\nThe guide is split into two main sections.\n\nThe first section is designed for anyone who wants to make their data visualisations more engaging. We present guidelines that serve as effective rules of thumb for creating impactful charts. While we expect our staff and partners to follow these guidelines when creating charts for TASO publications, they are highly flexible according to context.\nThe second section gives more technical details on styling charts for TASO publications. It covers aspects like sizing, font usage and colour schemes. This is to ensure consistency across TASO publications when collaborating with our partners. This section is tailored for TASO staff and partners, so if you are a general audience seeking high-level insights, you may wish to skip over it. However, we hope that general audiences may still find this section helpful if you are interested in developing your own style guide, or in understanding the finer details behind creating charts.\n\n\n\n\n\n\n\nNote\n\n\n\nIn this document, you will find examples of charts that follow our guidelines. These are either redesigns of existing TASO charts using the new guidance, or in some cases new charts to illustrate the guidelines. These charts are only intended to demonstrate how the style guide can be applied, and so should not be taken and shared outside of this document. As we apply the style guide, we will update this document with real examples taken from TASO publications.\n\n\n\nViewing the code\nIn this guide, wherever there is a chart, you will see a ‘Show the code’ button as below. Clicking this will reveal the R code used to create the plot you’re viewing. Using R is not a requirement for making high-quality charts, but for those who use R as their tool of choice, we hope this code will be helpful.\n\n\nShow the code\n# Load the tidyverse package, which includes ggplot2 and other data manipulation tools.\nlibrary(tidyverse)\n\n# Create a dataframe\ndf &lt;- data.frame(\n  X_Axis_Title = c(\"Category 1\", \"Category 2\", \"Category 3\", \"Category 4\"),\n  Y_Axis_Title = c(10, 20, 30, 20)\n)\n\n# Build the plot using ggplot2 package.\nggplot(df, aes(x = X_Axis_Title, y = Y_Axis_Title)) +\n  # Add bar elements to the plot. 'stat = \"identity\"' tells ggplot to use the y-values as they are.\n  geom_bar(stat = \"identity\", fill = \"#3b66bc\") +\n  # Add a horizontal line at y = 0, with a solid line type and a specified color.\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"#404040\") +\n  # Add labels for the axes, title, subtitle, and caption. Also format these elements.\n  labs(x = \"Axis Title (in italics if included)\", \n       y = \"\", \n       title = \"This is the title of the chart, it should be in Arial bold, no\\nlonger than two lines, and normally active\",\n       subtitle = \"This is the subtitle, it should normally be a formal statistical subtitle\",\n       caption = \"Source: This is the source in italics\\n\\nNotes: These are the notes in italics\") + \n  # Customise with TASO theme elements, including background colour, title positioning, gridlines.\n  theme_minimal() + \n  theme(\n          text = element_text(family = \"Arial\"),\n          plot.title.position = \"plot\",\n          plot.title = element_text(size = 16, face = \"bold\"),\n          plot.subtitle = element_text(size = 12),\n          plot.caption.position = \"plot\",\n          plot.caption = element_text(hjust = 0, size = 8, face = \"italic\"),\n          panel.grid.major.x = element_blank(),\n          panel.grid.major.y = element_line(colour = \"grey\"),\n          plot.background = element_rect(fill = \"#EDEBE3\"),\n          plot.margin = margin(0.25, 0.25, 0.25, 0.25, \"in\"),\n          axis.text.y = element_text(size = 11),\n          axis.text.x = element_text(size = 11),\n          axis.title.x = element_text(size = 10, face = \"italic\"))\n\n\n\n\n\n\n\n\n\n\n\n\nHow we made the guide\nIn developing the guide, we have drawn extensively on existing data visualisation work, notably the key principles outlined by Jonathan Schwabish, and the Government Analysis Function guidance on data visualisation. We aimed to distil and accentuate elements from various sources that we thought would be most beneficial for TASO, our partners and the wider sector. This guide, therefore, stands as a curated synthesis, offering tailored and impactful guidance for our specific context, with due credit to the influential work and expertise that inspired it. We have taken care to strike a balance, ensuring the guide offers practical insights without being overly burdensome. For a comprehensive list of the guides and resources we consulted during this process, please refer to the References and further resources section.",
    "crumbs": [
      "Home",
      "Data visualisation style guide"
    ]
  },
  {
    "objectID": "coding-good-practice/styler.html",
    "href": "coding-good-practice/styler.html",
    "title": "Automatic styling with styleR",
    "section": "",
    "text": "The tidyverse style guide provides all the detail you could need on the specifics of styling code. However, applying it manually can be time consuming. Instead, you can use styler, an R package that helps format your code automatically. If you haven’t already installed it, run install.packages(\"styler\").\nOnce this package is installed (which only needs to be done once), you can use an ‘Addin’ in RStudio. Click the ‘Addins’ button, scroll down to the ‘STYLER’ section and click ‘style active file’.\n\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Coding good practice",
      "Automatic styling with styleR"
    ]
  },
  {
    "objectID": "coding-good-practice/good_practice.html",
    "href": "coding-good-practice/good_practice.html",
    "title": "Good practice tips",
    "section": "",
    "text": "Efficient and clean coding practices are fundamental for effective data analysis and collaboration. This section offers a set of good practice tips tailored for scripting in R.1 These guidelines are designed to improve the readability, shareability, and functionality of your code.",
    "crumbs": [
      "Home",
      "Coding good practice",
      "Good practice tips"
    ]
  },
  {
    "objectID": "coding-good-practice/good_practice.html#tips-for-effective-r-scripting",
    "href": "coding-good-practice/good_practice.html#tips-for-effective-r-scripting",
    "title": "Good practice tips",
    "section": "Tips for effective R scripting",
    "text": "Tips for effective R scripting\n\nStructuring the scripts\n\nUse commented lines of - to help break up the script into readable sections.\nLoad all required packages, then all required files. Only load the packages that are necessary for your script.\n\n# Loading libraries and data --------------------------------------------------\n\n# Load libraries (install if needed)\n\nlibrary(tidyverse) \n\n# Load data \n\ndf &lt;- read.csv(\"example_data_vis.csv\")\n\n# Tidying the data ------------------------------------------------------------\n\n# Filter by year\ndf &lt;- df %&gt;% \n  filter(enrollment_year == 2020)\n\n# Separating a full name into first and last name\ndf_separated &lt;- df %&gt;% separate(col = FullName, \n                                into = c(\"FirstName\", \"LastName\"), \n                                sep = \" \")\n\nInclude a line on who wrote the script, and a line or two on what its purpose is.\n\n# Open University Learner Analytics Data (OULAD) ------------------------------\n\n# 1. OULAD loading and cleaning -----------------------------------------------\n\n# Introduction ----------------------------------------------------------------\n\n# Ongoing document written by LA with support from RJS.\n# Analyses the Open University Learner Analytics Dataset.\n# Info on this open dataset and the data can be found here:\n# https://analyse.kmi.open.ac.uk/open_dataset\n\nIf the script is unwieldy, consider breaking the code up into separate files. As a rule of thumb, a file shouldn’t be longer than 2000 lines.\n\n\n\nCoding practices\n\nWhere possible, use the tidyverse rather than Base R. The tidyverse has friendly syntax and is often easier to read than Base R.2\n\n\n\nComment liberally, explaining what your code is doing and why.\n\n# Creating binary deprivation measure\n# Where bottom three deciles are coded as deprived\nstudent_info &lt;- student_info %&gt;%\n  mutate(deprivation_status = case_when(\n    is.na(imd_decile) ~ NA_character_,\n    imd_decile %in% 1:3 ~ \"Deprived\", \n    imd_decile %in% 4:10 ~ \"Not deprived\", \n    TRUE ~ \"ERROR\"\n  ))\n  \n# student_info has more than one row for many students, who are taking more than one module\n# So we can keep unique id_student to perform a lookup \nstudent_info_unique &lt;- student_info %&gt;%\n  distinct(id_student, .keep_all = TRUE)\n\nTry to keep the code to 80 characters or less per line for readability.\nUse &lt;- not = for assignment.3\n\n\n\nTry not to repeat yourself - if you’re repeating the same code many times, consider using a loop or function, which will save time and decrease the likelihood of making a mistake.\n\n\n\nOrganising files and workspace\n\nAim for names (both for files and variables) that are concise and meaningful.\n\nBad practice:\n\ndata_analysis_version2_final.R\nnew_script_updated.R\nfinal_data_03.04.2024.R\n\nGood practice:\n\nstudent_performance_analysis.R\ncourse_enrollment_trends.R\nfaculty_publication_summary.R\n\n\nIf files should be run in a certain order, begin the file name with numbers (e.g. 1_tidy_data, 2_exploratory_analysis, 3_model).\nIt may be helpful to explicitly specify R script or package dependencies clearly.4 Use a DESCRIPTION file to detail required R packages and their versions. For scripts, consider including a README file that mentions all necessary packages and scripts, ensuring users know exactly what they need to run your code smoothly.\n\n\nTry to avoid modifying raw data. If you modify data manually you might make errors, and won’t be able to restore the original version. Creating a script that processes the raw data and creates a new version enables you to keep track of all the steps you have taken.\nStart with a clean environment: do not save the workspace (which is turned on by default).5 Go to Tools -&gt; ‘Global Options’, then select ‘Never’ for ‘Save workspace to .RData on exit’.",
    "crumbs": [
      "Home",
      "Coding good practice",
      "Good practice tips"
    ]
  },
  {
    "objectID": "coding-good-practice/good_practice.html#footnotes",
    "href": "coding-good-practice/good_practice.html#footnotes",
    "title": "Good practice tips",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nR and RStudio are two different things. R is a programming language for statistics, and RStudio is a tool that makes R easier to use. It’s rare, but someone might have R without RStudio. This guide is written assuming you have both R and RStudio installed.↩︎\nThere is debate around this. However this discussion is beyond the scope of this guide. All that we need to know for the purposes of this guide is that the tidyverse is a collection of packages designed to work together in data science tasks. It simplifies data manipulation, visualisation and analysis through a consistent syntax and logical workflow. For all things tidyverse, see R for Data Science.↩︎\nIn R, &lt;- assigns values to variables, while == tests equality. Using different symbols for assignment and equality makes R code more readable and easier to follow.↩︎\nDependencies in R are external packages or software your code needs to run, such as ggplot2 for graphs or dplyr for data handling. Listing these packages ensures others can use your code without issues, making it easier to share and reproduce your work across different systems.↩︎\nA ‘clean environment’ means having a fresh workspace where no previous work (like variables or data sets you’ve created, or libraries you’ve loaded) is left over. This is crucial for making sure your code runs smoothly and is easy for others to understand. The most straightforward way to achieve a clean environment is by going to the ‘Session’ menu and selecting ‘Restart R’.↩︎",
    "crumbs": [
      "Home",
      "Coding good practice",
      "Good practice tips"
    ]
  },
  {
    "objectID": "coding-good-practice/furtherresources.html",
    "href": "coding-good-practice/furtherresources.html",
    "title": "Further resources",
    "section": "",
    "text": "If you are unsure on anything, or if something is not covered here, check the Tidyverse Style Guide.",
    "crumbs": [
      "Home",
      "Coding good practice",
      "Further resources"
    ]
  },
  {
    "objectID": "coding-good-practice/furtherresources.html#key-resources",
    "href": "coding-good-practice/furtherresources.html#key-resources",
    "title": "Further resources",
    "section": "Key resources",
    "text": "Key resources\nOther key resources for building this guidance include:\n\nBest Practices for Writing R Code\nR Code - Best practices\nGoogle’s R Style Guide\nProductive R Workflow",
    "crumbs": [
      "Home",
      "Coding good practice",
      "Further resources"
    ]
  },
  {
    "objectID": "coding-good-practice/furtherresources.html#feedback",
    "href": "coding-good-practice/furtherresources.html#feedback",
    "title": "Further resources",
    "section": "Feedback",
    "text": "Feedback\nIf you have any best practice tips you think should be included, please get in touch. Your input is invaluable in improving this guide.",
    "crumbs": [
      "Home",
      "Coding good practice",
      "Further resources"
    ]
  },
  {
    "objectID": "coding-good-practice/index.html",
    "href": "coding-good-practice/index.html",
    "title": "Coding good practice",
    "section": "",
    "text": "Code hygiene is crucial for maintaining the quality and readability of code.1 This document sets out guidelines for ensuring that code is accessible and shareable.",
    "crumbs": [
      "Home",
      "Coding good practice"
    ]
  },
  {
    "objectID": "coding-good-practice/index.html#who-is-this-for",
    "href": "coding-good-practice/index.html#who-is-this-for",
    "title": "Coding good practice",
    "section": "Who is this for?",
    "text": "Who is this for?\nThis guide is for those who have some experience and familiarity with R and are looking to refine their coding approach.\nPractitioners, academics and students can all gain from this guide. It is particularly beneficial for those dealing with complex scripts, revisiting their code for updates, or sharing work with colleagues and the wider sector.",
    "crumbs": [
      "Home",
      "Coding good practice"
    ]
  },
  {
    "objectID": "coding-good-practice/index.html#why-is-good-code-hygeine-important",
    "href": "coding-good-practice/index.html#why-is-good-code-hygeine-important",
    "title": "Coding good practice",
    "section": "Why is good code hygeine important?",
    "text": "Why is good code hygeine important?\n\n\n\n\n\n\nHadley Wickham on coding style\n\n\n\n“Good coding style is like correct punctuation: you can manage without it, butitsuremakesthingseasiertoread.”\n\n\nGood code hygiene entails writing code that is not only functional but also clean, well-organised, and easy to understand.\nFor non-expert R users, maintaining good code hygiene can simplify the learning curve. Well-written code is easier to debug, update, and share. This guide offers practical tips for immediate application, helping you write clean and readable code.\nBy following these guidelines, you will improve your own coding skills. You will also contribute to the broader research community by making your code more accessible to others. Whether working on personal projects, collaborating with a team, or contributing to open-source software, these guidelines will enhance the quality and longevity of your R code.",
    "crumbs": [
      "Home",
      "Coding good practice"
    ]
  },
  {
    "objectID": "coding-good-practice/index.html#footnotes",
    "href": "coding-good-practice/index.html#footnotes",
    "title": "Coding good practice",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAs R is the primary statistical software used by TASO, this document is written specifically with R in mind. However, many of the guidelines will apply to other languages like Python or Stata.↩︎",
    "crumbs": [
      "Home",
      "Coding good practice"
    ]
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact point",
    "section": "",
    "text": "We view this guide as an iterative resource and want to emphasise the valuable role feedback plays in its improvement. Your insights are crucial to refining and enhancing this resource. We encourage you to share your thoughts, suggestions and experiences with us, to ensure the ongoing relevance and effectiveness of this guide. For any inquiries, comments, or feedback, you can contact Luke Arundel at luke.arundel@taso.org.uk.\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Contact point"
    ]
  },
  {
    "objectID": "data-vis/principles.html",
    "href": "data-vis/principles.html",
    "title": "Principles for good data visualisation",
    "section": "",
    "text": "In this section, we present guiding principles to improve your chart design. We encourage TASO partners to implement these principles when designing charts. Applying these principles may vary depending on specific contexts and needs, but keeping them in mind can help make your charts more impactful and communicate your ideas more effectively.",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Principles for good data visualisation"
    ]
  },
  {
    "objectID": "data-vis/principles.html#choosing-your-chart",
    "href": "data-vis/principles.html#choosing-your-chart",
    "title": "Principles for good data visualisation",
    "section": "Choosing your chart",
    "text": "Choosing your chart\nWhen deciding on a chart, remember the core message you intend to convey. If summarising your chart’s point takes more than a few sentences, you may need to reconsider your choice. The Visual Vocabulary tool by the Financial Times is a valuable resource for selecting the right chart and sparking creative ideas.1 Consider your audience when making your selection – what works well in a technical report may not resonate as effectively in a webinar or blog post. Remember, charts are more than data points; they are narratives designed to tell a compelling story, prioritising clarity over exhaustive detail.",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Principles for good data visualisation"
    ]
  },
  {
    "objectID": "data-vis/principles.html#raise-principles---summary",
    "href": "data-vis/principles.html#raise-principles---summary",
    "title": "Principles for good data visualisation",
    "section": "RAISE principles - summary",
    "text": "RAISE principles - summary\nThese principles are adapted from the key steps for better data visualisation set out by Jonathan Schwabish.2 Keep them in mind when designing charts to help make them as engaging as possible:\n\nReduce the clutter: excessive chart elements, such as dense gridlines, or superfluous tick marks and labels, can reduce the effectiveness of a chart.\nAnnotate: consider including explanatory text to help the audience understand how to interpret the visualisation, guiding them through the content.\nIntegrate the text: where feasible, incorporate legends directly into the chart and use active titles that capture the primary takeaway. If articulating the key message is challenging, you may need to reassess your choice of chart.\nShow the data: consider highlighting the values that are more important to your argument, particularly if there is a lot of information on the chart. This helps ensure the audience focuses on the most pertinent data points.\nEngage the audience: thoughtfully assess the chart’s context and consider how to effectively engage the audience. A chart extracted from a technical report may not translate as effectively in a webinar or blog post and may demand adaptation.",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Principles for good data visualisation"
    ]
  },
  {
    "objectID": "data-vis/principles.html#reduce-the-clutter",
    "href": "data-vis/principles.html#reduce-the-clutter",
    "title": "Principles for good data visualisation",
    "section": "Reduce the clutter",
    "text": "Reduce the clutter\nStart with the principle of making charts as simple and stripped back as possible, and gradually incorporate elements as needed. Unnecessary and distracting visual components can compromise the overall effectiveness of your visualisation.\n\nText should almost always be horizontal. Sometimes it may be worth considering the format of the chart to incorporate this, such as horizontal bars instead of vertical.\nConsider if you can label data points directly – if you can label all data points, you may be able to drop axis labels.\nConsider if axis titles need to be included. For example, if the X-axis shows ‘2013, 2014, 2015’, there is no need to add ‘Year’ as the X-axis title.\nConsider how many gridlines are helpful – too few can mean they are not useful, and too many can make the chart cluttered.\nDo not use unnecessary elements like colour gradients or 3D effects.\n\n\nClutteredTidy\n\n\n\n\nShow the code\n# Load the tidyverse package.\nlibrary(tidyverse)\n\n# Create a dataframe.\ndf &lt;- data.frame(\n  category = c(\"Social or communication impairment\", \n                 \"Sensory, medical or physical impairments\", \n                 \"Multiple impairments\", \n                 \"Mental health condition\", \n                 \"Cognitive or learning difficulties\"),\n  proportion = c(0.006, 0.022, 0.026, 0.039, 0.05)\n)\n\n# Build the plot using ggplot2 package.\nggplot(df, aes(x=reorder(category, proportion), y=proportion, fill = category)) +\n  # Add bars to the plot to represent each category's proportion.\n  geom_bar(stat=\"identity\") +\n  # Flip the plot to horizontal layout for better readability of category names.\n  coord_flip() + \n  # Set the labels for the plot, including title, subtitle, axes labels, and caption.\n  labs(x = \"Category\", y = \"Proportion of students (%)\", \n       title = \"The range and nature of disability varies considerably\",\n       subtitle = \"Figure 1: Proportion of students studying in England who declared a disability\\nby impairment, 2018-19\",\n       caption = \"Source: Reproduced from OfS analysis of equality and diversity data\\n\\nNote: 85.7% of students do not declare a disability \n\"\n) + \n  # Format the y-axis as a percentage for better interpretation.\n  scale_y_continuous(labels = scales::percent_format(scale = 100),\n  expand = c(0.02, 0)) +  \n  # Add text labels to each bar for direct reading of percentages.\n  geom_text(aes(label = scales::percent(proportion)), \n            vjust = 0.5, \n            hjust = 1.5, \n            size = 3, \n            fontface = \"bold\", \n            data = df, \n            color = \"white\") +\n\n# Customise with TASO elements.\ntheme_minimal() + \n  # Further customize the plot's appearance including font, title, grid lines, and margins.\n  theme(\n        text = element_text(family = \"Arial\"),\n        plot.title.position = \"plot\",\n        plot.title = element_text(size = 16, face = \"bold\"),\n        plot.subtitle = element_text(size = 12),\n        plot.caption.position = \"plot\",\n        plot.caption = element_text(hjust = 0, size = 8, face = \"italic\"),\n        panel.grid.major = element_line(colour = \"darkgrey\"),\n        panel.grid.minor = element_line(colour = \"darkgrey\"),\n        plot.background = element_rect(fill = \"#EDEBE3\"),\n        plot.margin = margin(0.25, 0.25, 0.25, 0.25, \"in\"),\n        axis.text.x = element_text(size = 11),\n        axis.text.y = element_text(size = 11),\n        legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nlibrary(tidyverse)\n\ndf &lt;- data.frame(\n  category = c(\"Social or communication impairment\", \n                 \"Sensory, medical or physical impairments\", \n                 \"Multiple impairments\", \n                 \"Mental health condition\", \n                 \"Cognitive or learning difficulties\"),\n  proportion = c(0.006, 0.022, 0.026, 0.039, 0.05)\n)\n\nggplot(df, aes(x=reorder(category, proportion), y=proportion)) +\n  geom_bar(stat=\"identity\", fill = \"#3b66bc\") +\n  coord_flip() + # Flip the coordinates to make the bars horizontal\n  labs(x = \"\", y = \"\", \n       title = \"The range and nature of disability varies considerably\",\n       subtitle = \"Figure 1: Proportion of students studying in England who declared a disability\\nby impairment, 2018-19\",\n       caption = \"Source: Reproduced from OfS analysis of equality and diversity data\\n\\nNote: 85.7% of students do not declare a disability \n\"\n) + \nscale_y_continuous(labels = scales::percent_format(scale = 100),\nexpand = c(0.02, 0)) +  # Formatting axis as percentage\ngeom_text(aes(label = scales::percent(proportion)), \n          vjust = 0.5, \n          hjust = 1.5, \n          size = 3, \n          fontface = \"bold\", \n          data = df, \n          color = \"white\") +\n  theme_minimal() + \n  theme(\n        text = element_text(family = \"Arial\"),\n        plot.title.position = \"plot\",\n        plot.title = element_text(size = 16, face = \"bold\"),\n        plot.subtitle = element_text(size = 12),\n        plot.caption.position = \"plot\",\n        plot.caption = element_text(hjust = 0, size = 8, face = \"italic\"),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_line(\"grey\"),\n        plot.background = element_rect(fill = \"#EDEBE3\"),\n        plot.margin = margin(0.25, 0.25, 0.25, 0.25, \"in\"),\n        axis.text.x = element_text(size = 11),\n        axis.text.y = element_text(size = 11))",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Principles for good data visualisation"
    ]
  },
  {
    "objectID": "data-vis/principles.html#annotate",
    "href": "data-vis/principles.html#annotate",
    "title": "Principles for good data visualisation",
    "section": "Annotate",
    "text": "Annotate\nConsider using annotations if they will help tell the story of the data. They can be used to highlight key information and support your analysis, bridging the gap between raw data and interpretation, and guiding the reader’s thinking process. They can also add context, if there are outliers, peaks or troughs, or if the chart type is unfamiliar to the reader.\n\nRelevance is key – ensure that annotations directly contribute to the narrative of the data. Avoid unnecessary or excessive annotations that could confuse the reader. Use them selectively to emphasise key insights.\nMake annotations concise, and place them near the relevant data points.\nEnsure they are distinct from other elements of the chart, such as through font size or weight.",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Principles for good data visualisation"
    ]
  },
  {
    "objectID": "data-vis/principles.html#integrate-the-text",
    "href": "data-vis/principles.html#integrate-the-text",
    "title": "Principles for good data visualisation",
    "section": "Integrate the text",
    "text": "Integrate the text\n\nActive titles\nThe choice of a chart title is often contextual, influenced by factors such as the nature of the content and any constraints posed by technical reports or academic papers. In general, opt for an active title that succinctly captures the key takeaway, complemented by a formal statistical subtitle. Titling charts in this way can make them more memorable and easier to digest. For more on why we think this is a more effective way to title charts, please see this blog post by the Office for National Statistics.3\n\n\n\n\n\n\nExample of best practice for chart titles and subtitles\n\n\n\nTitle: Students with mental health difficulties consistently have the highest anxiety\nSubtitle: Figure 18: Average anxiety level over time by disability type\n\n\n\n\n\n\n\n\nThis is traditionally the most common way of titling charts, but can be less helpful than an active title\n\n\n\nTitle: Fig. 18: Average anxiety level over time by disability type\n\n\n\n\nIntegrate the legend\nIntegrating the legend into the chart aids reader interpretation, creating a smoother, more intuitive experience. With an integrated legend, viewers do not need to shift their focus between the visualisation and a separate legend, which can be particularly difficult when there are multiple, similar colours involved.\n\nStandardIntegrated legend\n\n\n\n\nShow the code\nlibrary(tidyverse)\n\ntaso_three_colour &lt;- c(\"#3b66bc\", \"#00a8da\", \"#07dbb3\")\n\ndf &lt;- data.frame(\n  Year = c(2019, 2020, 2021, 2022),\n  School_A = c(10, 12, 15, 13),\n  School_B = c(17, 15, 21, 24),\n  School_C = c(4, 2, 5, 6)\n)\n\ndf &lt;- gather(df, key = \"School\", value = \"Value\", -Year)\n\n# Now you can create a plot with ggplot\nggplot(df, aes(x = Year, y = Value, color = School, group = School)) +\n  geom_line() + # or geom_point() if you want points\n  geom_point() +\n  scale_colour_manual(values = taso_three_colour) +\n  theme_minimal() +\n  theme(\n          text = element_text(family = \"Arial\"),\n          panel.grid.major.x = element_line(colour = \"#E4E2D9\"),\n          panel.grid.major.y = element_line(colour = \"#E4E2D9\"),\n          plot.background = element_rect(fill = \"#EDEBE3\"),\n          plot.margin = margin(0.25, 0.25, 0.25, 0.25, \"in\"),\n          axis.text.y = element_text(size = 11),\n          axis.text.x = element_text(size = 11), \n          axis.title = element_blank()) +\n  coord_cartesian(clip = \"off\") \n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nlibrary(tidyverse)\n\ntaso_three_colour &lt;- c(\"#3b66bc\", \"#00a8da\", \"#07dbb3\")\n\ndf &lt;- data.frame(\n  Year = c(2019, 2020, 2021, 2022),\n  School_A = c(10, 12, 15, 13),\n  School_B = c(17, 15, 21, 24),\n  School_C = c(4, 2, 5, 6)\n)\n\ndf &lt;- gather(df, key = \"School\", value = \"Value\", -Year)\n\n# Now you can create a plot with ggplot\nggplot(df, aes(x = Year, y = Value, color = School, group = School)) +\n  geom_line() + # or geom_point() if you want points\n  geom_point() +\n  geom_text(data = subset(df, Year == 2022), aes(label = School), \n            hjust = 0.3, vjust = -1, size = 3.5, fontface = \"bold\") +\n  scale_colour_manual(values = taso_three_colour) +\n  theme_minimal() +\n  theme(\n          text = element_text(family = \"Arial\"),\n          panel.grid.major.x = element_line(colour = \"#E4E2D9\"),\n          panel.grid.major.y = element_line(colour = \"#E4E2D9\"),\n          plot.background = element_rect(fill = \"#EDEBE3\"),\n          plot.margin = margin(0.25, 0.25, 0.25, 0.25, \"in\"),\n          axis.text.y = element_text(size = 11),\n          axis.text.x = element_text(size = 11), \n          axis.title = element_blank()) +\n  coord_cartesian(clip = \"off\") + \n  guides(fill = FALSE, colour = FALSE)",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Principles for good data visualisation"
    ]
  },
  {
    "objectID": "data-vis/principles.html#show-the-data",
    "href": "data-vis/principles.html#show-the-data",
    "title": "Principles for good data visualisation",
    "section": "Show the data",
    "text": "Show the data\nConsider highlighting the values that are most important to your argument. You don’t need to show all the data all of the time, as this can make it hard to see the data that matters most. For example, for line charts, try to have no more than four or five different colours.\nYou can change the properties of parts of the chart – such as by selectively using colour, shape and saturation – to guide a reader’s attention and make parts of a chart stand out.\n\nStandardHighlighting data\n\n\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(ggtext)\n\ndf &lt;- data.frame(\n  category = c(\"No\", \n               \"Yes - inadequately specified\", \n               \"Yes - explores the general approach\", \n               \"Yes - adequately specified (institutional level)\", \n               \"Yes - adequately specified (intervention level)\"),\n  count = c(42, 31, 17, 26, 27)\n)\n\nggplot(df, aes(x = count, y = factor(category, levels = c(\"No\", \n                                                                         \"Yes - inadequately specified\", \n                                                                         \"Yes - explores the general approach\", \n                                                                         \"Yes - adequately specified (institutional level)\", \n                                                                         \"Yes - adequately specified (intervention level)\")))) +\n  # ^ sorting the bars in the chart in desired order\n  geom_bar(stat = \"identity\", fill = \"#EDEBE3\") + # Adding bars of same colour as background underneath so alpha can be used for colouring\n  geom_bar(stat = \"identity\", fill = \"#3b66bc\") + # Bar chart coloured peacock\n  theme_minimal() + # Setting the theme as minimal, adding elements we want back in \n  # Title, subtitle, axis titles and caption \n  labs(\n    title = 'Over 40 providers did not include a Theory of Change  \\n(ToC) in their Access and Participation Plan (APP)',\n    # By using ggtext::element_markdown, we can use markdown stylings to colour specific words in the chart to highlight a point\n    subtitle = \"Figure 3: The number of Higher Education Providers (HEPs) who included a\\nToC in their APP\",\n    caption = \"Source: TASO (2023), Approaches to addressing the ethnicity degree awarding gap\",\n    x = NULL, # Not showing X or Y axis title for this example chart\n    y = NULL \n  ) +\n  scale_x_continuous(expand = c(0,0)) + \n  geom_vline(xintercept = 0, colour = \"#404040\", linewidth = 0.5) +\n  # Theme elements\n  theme(text = element_text(family = \"Arial\"), # Specifying font for whole chart\n        ## Title and subtitle elements \n        plot.title.position = \"plot\", # Aligning title to entire plot (not just panel)\n        plot.title = ggtext::element_markdown(face = \"bold\", \n                                              size = 16), \n        plot.subtitle = element_text(size = 12), \n        ## Caption elements \n        plot.caption.position = \"plot\", # Aligning caption to entire plot\n        plot.caption = element_text(hjust = 0, # Aligning font to the left\n                                    size = 8, # Changing size\n                                    face = \"italic\"), # Italicizing caption\n        ## Other theme elements\n        plot.background = element_rect(fill = \"#EDEBE3\"), # Changing background colour\n        plot.margin = margin(0.25, 0.25, 0.25, 0.25, \"in\"), # Setting margin in inches\n        axis.text.x = element_text(size = 10), \n        panel.grid.major.x = element_line(colour = \"grey\"),\n\n  ) + \n  # Other helpful elements\n  coord_cartesian(clip = \"off\") +\n  geom_text(aes(label = count, colour = category), vjust = 0.5, hjust = 1.5, size = 3, fontface = \"bold\", \n            data = df, color = \"white\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(ggtext)\n\ndf &lt;- data.frame(\n  category = c(\"No\", \n               \"Yes - inadequately specified\", \n               \"Yes - explores the general approach\", \n               \"Yes - adequately specified (institutional level)\", \n               \"Yes - adequately specified (intervention level)\"),\n  count = c(42, 31, 17, 26, 27)\n)\n\nggplot(df, aes(x = count, y = factor(category, levels = c(\"No\", \n                                                                         \"Yes - inadequately specified\", \n                                                                         \"Yes - explores the general approach\", \n                                                                         \"Yes - adequately specified (institutional level)\", \n                                                                         \"Yes - adequately specified (intervention level)\")))) +\n  # ^ sorting the bars in the chart in desired order\n  geom_bar(stat = \"identity\", fill = \"#EDEBE3\") + # Adding bars of same colour as background underneath so alpha can be used for colouring\n  geom_bar(stat = \"identity\", fill = \"#3b66bc\", alpha = 0.4) + # Bar chart coloured peacock\n  theme_minimal() + # Setting the theme as minimal, adding elements we want back in \n  # Title, subtitle, axis titles and caption \n  labs(\n    title = 'Over 40 providers &lt;span style=\"color:#3b66bc;\"&gt;did not include a Theory of Change&lt;/span&gt;  \\n(ToC) in their Access and Participation Plan (APP)',\n    # By using ggtext::element_markdown, we can use markdown stylings to colour specific words in the chart to highlight a point\n    subtitle = \"Figure 3: The number of Higher Education Providers (HEPs) who included a\\nToC in their APP\",\n    caption = \"Source: TASO (2023), Approaches to addressing the ethnicity degree awarding gap\",\n    x = NULL, # Not showing X or Y axis title for this example chart\n    y = NULL \n  ) +\n  scale_x_continuous(expand = c(0,0)) + \n  geom_vline(xintercept = 0, colour = \"#404040\", linewidth = 0.5) +\n  # Theme elements\n  theme(text = element_text(family = \"Arial\"), # Specifying font for whole chart\n        ## Title and subtitle elements \n        plot.title.position = \"plot\", # Aligning title to entire plot (not just panel)\n        plot.title = ggtext::element_markdown(face = \"bold\", \n                                              size = 16), \n        plot.subtitle = element_text(size = 12), \n        ## Caption elements \n        plot.caption.position = \"plot\", # Aligning caption to entire plot\n        plot.caption = element_text(hjust = 0, # Aligning font to the left\n                                    size = 8, # Changing size\n                                    face = \"italic\"), # Italicizing caption\n        ## Other theme elements\n        plot.background = element_rect(fill = \"#EDEBE3\"), # Changing background colour\n        plot.margin = margin(0.25, 0.25, 0.25, 0.25, \"in\"), # Setting margin in inches\n        axis.text.x = element_text(size = 10), \n        panel.grid.major.x = element_line(colour = \"grey\"),\n\n  ) + \n  # Other helpful elements\n  coord_cartesian(clip = \"off\") + \n  geom_bar(data = subset(df, category == \"No\"), fill = \"#3b66bc\", stat = \"identity\", show.legend = FALSE) + \n  geom_text(aes(label = count, colour = category), vjust = 0.5, hjust = 1.5, size = 3, fontface = \"bold\", \n            data = subset(df, category == \"No\"), color = \"white\") +\n  geom_text(aes(label = count, colour = category), vjust = 0.5, hjust = 1.5, size = 3, \n            data = subset(df, category != \"No\"), color = \"black\")",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Principles for good data visualisation"
    ]
  },
  {
    "objectID": "data-vis/principles.html#engage-the-audience",
    "href": "data-vis/principles.html#engage-the-audience",
    "title": "Principles for good data visualisation",
    "section": "Engage the audience",
    "text": "Engage the audience\nStrive to make your visualisation as engaging as possible. Capturing the reader’s attention ensures that your message is not only seen but also comprehended and remembered. Engaging visuals spark curiosity, encouraging a deeper exploration and analysis of the data. This connection leads to a more profound understanding of the insights you are sharing.",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Principles for good data visualisation"
    ]
  },
  {
    "objectID": "data-vis/principles.html#guidance-for-common-chart-types",
    "href": "data-vis/principles.html#guidance-for-common-chart-types",
    "title": "Principles for good data visualisation",
    "section": "Guidance for common chart types",
    "text": "Guidance for common chart types\n\nBar charts\n\nBar charts should always start at zero.\nOrder bars by their values, unless there is a logical order, such as level of qualification or date.\nConsider directly labelling data points and removing gridlines if there are only a few bars in your chart.\nAs text should be horizontal, a horizontal bar chart may be more appropriate when your axis labels are long.\n\n\n\nLine charts\n\nTry not to use more than five lines on a single chart. Including too many lines can make the chart confusing, particularly when they cross over at multiple points.\n\nIf you need to include more than this, consider splitting your chart into small multiples (also known as faceting or panel charts).\nAlternatively, consider highlighting selected lines of interest and greying the rest out. This makes clear the line of interest while still enabling readers to easily see how it compares to other lines.\n\nTry to integrate the legend and label lines directly, so readers do not have to match the colours from the line to the legend, as in the example on the right below.\n\n\n\nPie charts\n\nGenerally, we find that bar charts are more effective than pie charts, as it can be hard to discern the difference in size between different segments.\nPie charts can be particularly difficult to read when values are close, or if there are multiple segments.\nConsider whether another chart type may be more appropriate. However, this is a rule of thumb and pie charts can be used, but do so with caution.",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Principles for good data visualisation"
    ]
  },
  {
    "objectID": "data-vis/principles.html#footnotes",
    "href": "data-vis/principles.html#footnotes",
    "title": "Principles for good data visualisation",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFinancial Times. 2019. Visual vocabulary. https://ft-interactive.github.io/visualvocabulary/ [Accessed 21 November 2023]↩︎\nSchwabish, J. 2021. Better data visualizations: A guide for scholars, researchers, and wonks. Columbia University Press.↩︎\nDonnarumma, F. 2019. Say what you see - the way we write chart titles is changing. https://digitalblog.ons.gov.uk/2019/01/28/say-what-you-see-the-way-we-write-charttitles-is-changing/ [Accessed 21 November 2023]↩︎",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Principles for good data visualisation"
    ]
  },
  {
    "objectID": "data-vis/styling.html",
    "href": "data-vis/styling.html",
    "title": "Styling charts for TASO publications",
    "section": "",
    "text": "This section is designed with TASO partners and staff in mind, providing rules on chart formatting to ensure consistency across TASO outputs. That said, we anticipate that the insights provided may also be beneficial to anyone interested in developing their own data visualisation style guide, or understanding the technical details behind creating consistently formatted and distinctive charts.",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Styling charts for TASO publications"
    ]
  },
  {
    "objectID": "data-vis/styling.html#formatting-rules",
    "href": "data-vis/styling.html#formatting-rules",
    "title": "Styling charts for TASO publications",
    "section": "Formatting rules",
    "text": "Formatting rules\n\n\nShow the code\nlibrary(tidyverse)\n\ndf &lt;- data.frame(\n  X_Axis_Title = c(\"Category 1\", \"Category 2\", \"Category 3\", \"Category 4\"),\n  Y_Axis_Title = c(10, 20, 30, 20)\n)\n\nggplot(df, aes(x = X_Axis_Title, y = Y_Axis_Title)) +\n  geom_bar(stat = \"identity\", fill = \"#3b66bc\") +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"#404040\") +\n  labs(x = \"Axis Title (in italics if included)\", \n       y = \"\", \n       title = \"This is the title of the chart, it should be in Arial bold, no\\nlonger than two lines, and normally active\",\n       subtitle = \"This is the subtitle, it should normally be a formal statistical subtitle\",\n       caption = \"Source: This is the source in italics\\n\\nNotes: These are the notes in italics\") + \n  theme_minimal() + \n  theme(\n          text = element_text(family = \"Arial\"),\n          plot.title.position = \"plot\",\n          plot.title = element_text(size = 16, face = \"bold\"),\n          plot.subtitle = element_text(size = 12),\n          plot.caption.position = \"plot\",\n          plot.caption = element_text(hjust = 0, size = 8, face = \"italic\"),\n          panel.grid.major.x = element_blank(),\n          panel.grid.major.y = element_line(colour = \"grey\"),\n          plot.background = element_rect(fill = \"#EDEBE3\"),\n          plot.margin = margin(0.25, 0.25, 0.25, 0.25, \"in\"),\n          axis.text.y = element_text(size = 11),\n          axis.text.x = element_text(size = 11),\n          axis.title.x = element_text(size = 10, face = \"italic\"))\n\n\n\n\n\n\n\n\n\nYou can find an example R script for creating charts with TASO styling on our GitHub. R is a widely used statistical software among researchers and data analysis. You can also find useful resources for data visualisation in R in the R resources section.\n\nThe font for the charts is Arial (or URW DIN if you have access). Ensure that font sizes always remain readable. If there is text you must include but you are finding it is too small, consider how you can redesign the chart. For annotations and data labels, if you are to use bolding or italics, use them with purpose.\nThe title should normally be an active title that conveys the key takeaway and should always be the largest text on the page.\nThe subtitle should be a formal statistical title (as you might traditionally title a chart).\nThe caption should be in the bottom left of the chart. It should be in italics, and smaller than the rest of the text on the chart.\nText sizes can have some flexibility. But ensure that the title is the largest text on the page, followed by the subtitle. Ensure all other text is smaller than the title and subtitle.\nColours\n\nThe text should be black, but adjust as appropriate for readability. For example, sometimes data labels will need to be white to stand out against colours.\nBackground should be #EDEBE3 (putty).\nGridlines should generally be #E4E2D9 (darker than the background but lighter than text and lines). Gridline shade can be adjusted if it aids readability, but it should be a shade of grey.\n\nFormat\n\n180mm (width) x 120mm (height) is the default standard chart size for A4 PDF reports. 180mm is the maximum width, however, the height is flexible depending on the chart. For example, if your chart needs to be tall rather than wide.\nSave as a PNG or a JPEG to avoid losing quality through copy and pasting or screenshots.\n\nIf you are including the logo, it should be in the bottom right corner, with sufficient space around it as per the brand guidelines. The logo is not needed in PDF reports that already contain TASO branding. However, consider including the logo for web/social media versions of charts, where the chart is taken outside of the context of the report.\n\n\n\n\n\n\n\nAdjusting charts for different publication types\n\n\n\nWe are currently developing how charts should be styled across different publications. A chart published in an analytical report will require a slightly different set up to a chart for a blog or a social media. TASO are exploring how to optimise charts for each of these mediums. To see how we have tackled this most recently, we can look at charts for TASO’s Education pathways report.\n\nChart for reportChart for social media\n\n\nFor a formal report, we felt it was more appropriate to have the figure caption in text. We still used our ‘active title’ for the figure caption, but we used it in-text, rather than as part of the image itself.\n\n\n\nTo share this chart on social media, we incorporated this figure caption into the chart itself. We also dropped the figure number and the footnotes.",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Styling charts for TASO publications"
    ]
  },
  {
    "objectID": "data-vis/styling.html#brand-colours",
    "href": "data-vis/styling.html#brand-colours",
    "title": "Styling charts for TASO publications",
    "section": "Brand colours",
    "text": "Brand colours\n#07dbb3 #3b66bc #e4e2d9 #edebe3 #f9466c #485866\n\n\n\n\n\n\nNote\n\n\n\nYou can use RColourBrewer to generate gradients in R. Alternatively, you can use this website to modify the brightness and colour intensity and choose the number of colours you want to generate.\n\n\n\n\nShow the code\ntaso_one_colour &lt;- \"#3b66bc\"\ntaso_two_colour &lt;- c(\"#3b66bc\", \"#07dbb3\")\ntaso_three_colour &lt;- c(\"#3b66bc\", \"#00a8da\", \"#07dbb3\")\ntaso_four_colour &lt;- c(\"#3b66bc\", \"#0093d9\", \"#00bad2\", \"#07dbb3\")\ntaso_five_colour &lt;- c(\"#3b66bc\", \"#0089d6\", \"#00a8da\", \"#00c3cc\", \"#07dbb3\")\n\ntaso_likert &lt;- c(\"#f9466c\", \"#fea3ac\", \"#f1f1f1\", \"#9ea8d7\", \"#3b66bc\")",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Styling charts for TASO publications"
    ]
  },
  {
    "objectID": "data-vis/styling.html#accessibility",
    "href": "data-vis/styling.html#accessibility",
    "title": "Styling charts for TASO publications",
    "section": "Accessibility",
    "text": "Accessibility\nEnsure foreground and background colours contrast enough to pass the WCAG AA standard. You can check the colour contrast here.\nFor more in-depth guidance on accessibility, we recommend the accessibility sections of the Government Analysis Function data visualisation guidance and the Royal Statistical Society data visualisation guide.\nAt TASO, we will be looking further into how we can improve the accessibility of our charts, particularly around the use of accessible colour palettes.\nFor alt text, Amy Cesal provides some useful guidance on how to write alt text for charts.1 She includes the following formula to help:\nChart type of type of data where reason for including chart\n\n\n\n\n\n\nAlt text example\n\n\n\nBar chart of the average earnings of students by highest qualification where students who went to a top third university earn the most",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Styling charts for TASO publications"
    ]
  },
  {
    "objectID": "data-vis/styling.html#footnotes",
    "href": "data-vis/styling.html#footnotes",
    "title": "Styling charts for TASO publications",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nCesal, A. 2020. Writing Alt Text for Data Visualization. https://medium.com/nightingale/writing-alt-text-for-data-visualization-2a218ef43f81 [Accessed 21 November 2023]↩︎",
    "crumbs": [
      "Home",
      "Data visualisation style guide",
      "Styling charts for TASO publications"
    ]
  }
]